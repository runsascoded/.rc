#!/usr/bin/env bash

set -e

offset="$1"
shift
if [ $# -eq 1 ]; then
  file="$1"
  shift
  indent_level=1
elif [ $# -eq 2 ]; then
  indent_level="$1"
  file="$2"
else
  echo "Usage: $0 <offset> [indent-level=1] <file>" 1>&2
  exit 1
fi

source "$(dirname "${BASH_SOURCE[0]}")/.helpers-rc"

node_offset="$offset"
let next_indent_level=$indent_level+1

byte is_leaf
byte reserved
short count

if [ $is_leaf -eq 1 ]; then
  ei $indent_level "Leaf node:\toffset $node_offset, $count items"
elif [ $is_leaf -eq 0 ]; then
  ei $indent_level "Non-leaf node:\toffset $node_offset, $count items"
else
  echo "Bad is_leaf value $is_leaf at $node_offset" 1>&2
  exit 4
fi

item_idx=0
while [ $item_idx -lt $count ]; do
  item_offset=$offset
  int start_ix
  int start_base
  int end_ix
  int end_base
  long data_offset

  if [ $start_ix -eq $end_ix ]; then
    let base_diff=$end_base-$start_base
  else
    base_diff="NaN"
  fi

  if [ $is_leaf -eq 1 ]; then
    long data_size
    indent $next_indent_level
    printf '% 4d:% 10d: %d:% 10d - %d:% 10d (% 7s) % 10d % 5d\n' "$item_idx" "$item_offset" "$start_ix" "$start_base" "$end_ix" "$end_base" "$base_diff" "$data_offset" "$data_size"
  else
    indent $next_indent_level
    printf '% 4d:% 10d: %d:% 10d - %d:% 10d (% 7s) % 10d\n' "$item_idx" "$item_offset" "$start_ix" "$start_base" "$end_ix" "$end_base" "$base_diff" "$data_offset"
    $0 "$data_offset" "$next_indent_level" "$file"
  fi

  let item_idx=$item_idx+1
done
