#!/usr/local/bin/node

var moment = require('moment');

var args = process.argv.slice(2);

process.stdout.on('error', function( err ) {
    if (err.code == "EPIPE") {
        process.exit(0);
    }
});

function parseDateFormat(str) {
  var m = str.match(/([0-9]{2,4})([/-])[0-9]{2}[/-][0-9]{2} [0-9]{2}:[0-9]{2}(:[0-9]{2})?/)
  if (m) {
    var yearFormat = m[1].split('').map(function() { return 'Y'; }).join('');
    var dateSep = m[2];
    var secondsFormatArray = m[3] ? ['ss'] : []
    var format = [yearFormat, 'MM', 'DD'].join(dateSep) + " " + ['HH', 'mm'].concat(secondsFormatArray).join(':')
    return format;
  }
}

var content = '';
process.stdin.resume();
process.stdin.on('data', function(buf) { content += buf.toString(); });
process.stdin.on('end', function() {

  var lines = content.split("\n").filter(function(line) { return !!line; });   // split the lines
  lines.map(function(line) {
    var format = parseDateFormat(line);
    if (!format) {
      throw new Error("Couldn't parse datetime: " + line);
    }
    return moment(line, format);
  }).sort(function(d1, d2) {
    return parseInt(d1.format('X')) - parseInt(d2.format('X'));
  }).forEach(function(d) {
    console.log(d.format(d._f));
  });
});

