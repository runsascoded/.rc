#!/usr/bin/env bash

# PYTHONPATH
append_to PYTHONPATH "$HOME/c/mongo-python-driver/"
append_to PYTHONPATH "/Library/Python/Current/site-packages"
append_to PYTHONPATH "$HOME/Library/Python/Current/site-packages"

prepend_to_path "$HOME"/anaconda/bin

append_to PYTHONPATH "$s"
append_to PYTHONPATH "$s/py"

# LD_LIBRARY_PATH: move from this file later
append_to LD_LIBRARY_PATH "$HOME/.local/lib" "$HOME/lib64" "$HOME/lib"

# Graphite things
export WHISPER="$HOME/.whisper"
export CARBON="$HOME/.carbon"
append_to PYTHONPATH "$WHISPER/lib"

alias piu="pip install --user"

# Perl
append_to PERL5LIB "$HOME/bin"

if [ -d "$HOME/py2" ]; then
  export PYTHON2_HOME="$HOME/py2"
elif [ -d "/usr/local/Cellar/python/2.7.9/bin" ]; then
  export PYTHON2_HOME=/usr/local/Cellar/python/2.7.9
elif [ -x "$HOME/.local/bin/python2" ]; then
  export PYTHON2_HOME="$HOME/.local"
elif python --version 2>&1 | grep -q 'Python 2'; then
  export PYTHON2_HOME="$(dirname "$(dirname "$(which python)")")"
else
  echo "Warning: unable to find a sensible Python2 directory to set \$PYTHON2_HOME" >&2
fi

if [ -d "$HOME/py3" ]; then
  export PYTHON3_HOME="$HOME/py3"
elif python --version 2>&1 | grep -q 'Python 3'; then
  export PYTHON3_HOME="$(dirname "$(dirname "$(which python)")")"
else
  echo "Warning: unable to find a sensible Python3 directory to set \$PYTHON3_HOME" >&2
fi

set-python() {
  if [ "$1" == "2" ]; then
    if [ -d "$PYTHON2_HOME/bin" ]; then
      prepend_to_path "$PYTHON2_HOME/bin"
    else
      echo "Set \$PYTHON2_HOME to a directory containing a valid python2 installation" >&2
    fi
  elif [ "$1" == "3" ]; then
    if [ -d "$PYTHON3_HOME/bin" ]; then
      prepend_to_path "$PYTHON3_HOME/bin"
    else
      echo "Set \$PYTHON3_HOME to a directory containing a valid python3 installation" >&2
    fi
  else
    echo "Usage: set-python [2|3]" >&2
  fi
}

alias sp=set-python
alias pci="python-check-import"
alias ppp="print-python-path"
alias pmp="print-module-path"

alias pii="pip install"
alias pis="pip search"
