#!/usr/bin/env bash

# PYTHONPATH
append_to PYTHONPATH "$HOME/c/mongo-python-driver/"
#append_to PYTHONPATH "/Library/Python/Current/site-packages"
append_to PYTHONPATH "$HOME/Library/Python/Current/site-packages"

prepend_to_path "$HOME"/anaconda/bin
prepend_to_path "$HOME"/anaconda3/bin

append_to PYTHONPATH "$s"
append_to PYTHONPATH "$s/py"
prepend_to_path "$HOME/py3/bin"

# LD_LIBRARY_PATH: move from this file later
append_to LD_LIBRARY_PATH "$HOME/.local/lib" "$HOME/lib64" "$HOME/lib"

alias ve=virtualenv
alias piu="pip install --user"
alias piuu="pip install --user --upgrade"

# Set python2 path
if [ -d "$HOME/py2" ]; then
  export PYTHON2_HOME="$HOME/py2"
elif [ -d "/usr/local/Cellar/python/2.7.9/bin" ]; then
  export PYTHON2_HOME=/usr/local/Cellar/python/2.7.9
elif [ -x "$HOME/.local/bin/python2" ]; then
  export PYTHON2_HOME="$HOME/.local"
elif python --version 2>&1 | grep -q 'Python 2'; then
  export PYTHON2_HOME="$(dirname "$(dirname "$(which python)")")"
else
  echo "Warning: unable to find a sensible Python2 directory to set \$PYTHON2_HOME" >&2
fi

set_python() {
  if [ "$1" == "2" ]; then
    if [ -d "$PYTHON2_HOME/bin" ]; then
      prepend_to_path "$PYTHON2_HOME/bin"
      python --version
    else
      echo "Set \$PYTHON2_HOME to a directory containing a valid python2 installation" >&2
    fi
  elif [ "$1" == "3" ]; then
    if which python3 &> /dev/null && which pip3 &> /dev/null; then
      alias python="$(which python3)"
      alias pip="$(which pip3)"
      python --version
    else
      echo "couldn't find python3 and/or pip3" 1>&2
      return 1
    fi
  else
    echo "Usage: $0 [2|3]" >&2
  fi
}

defn sp set_python
defn pci python-check-import
defn ppp print-python-path
defn pmp python-module-path

defn pii pip install
defn pis pip search
defn py python-eval

alias pyv="python --version"

python_major_version() {
  python --version 2>&1 | grep -o '^Python [0-9]' | grep -o '[0-9]'
}
defn pymv python_major_version

maybe_set_python() {
  set_to="$1"
  if [ "$set_to" != "2" -a "$set_to" != "3" ]; then
    echo "Usage: $0 [2|3]" >&2
  elif [ "$(python_major_version)" != "$set_to" ]; then
    set_python "$set_to"
  fi
}
defn msp maybe_set_python

append_to_path "$HOME/Library/Python/2.7/bin"

